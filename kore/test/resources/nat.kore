[]

module NAT

  sort Nat{} []

  symbol zero{}() : Nat{} [constructor{}(), functional{}()]

  symbol succ{}(Nat{}) : Nat{} [constructor{}(), functional{}()]

  symbol plus{}(Nat{},Nat{}) : Nat{} [functional{}()]

  axiom{S}
    \exists{S}(
      T:Nat{},
      \equals{Nat{},S}(
        T:Nat{},
        zero{}())) []

  axiom{S}
    \exists{S}(
      T:Nat{},
      \equals{Nat{},S}(
        T:Nat{},
        succ{}(X:Nat{}))) []

  axiom{S}
    \exists{S}(
      T:Nat{},
      \equals{Nat{},S}(
        T:Nat{},
        plus{}(X:Nat{},Y:Nat{}))) []

  axiom{}
    \or{Nat{}}(
      zero{}(),
      \exists{Nat{}}(
        X:Nat{},
        succ{}(X:Nat{}))) []

  axiom{}
    \not{Nat{}}(
      \and{Nat{}}(
        zero{}(),
        \exists{Nat{}}(
          X:Nat{},
          succ{}(X:Nat{})))) []

  axiom{S}
    \equals{Nat{},S}(
      plus{}(X:Nat{},zero{}()),
      X:Nat{}) [unit{}()]

  axiom{S}
    \equals{Nat{},S}(
      plus{}(X:Nat{},succ{}(Y:Nat{})),
      succ{}(plus{}(X:Nat{},Y:Nat{}))) []

endmodule []
